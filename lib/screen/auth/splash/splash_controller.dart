import 'dart:async';
import 'dart:convert';
import 'dart:developer';
import 'package:connectivity_plus/connectivity_plus.dart';
import 'package:get/get.dart';
import 'package:puthagam/data/api/profile/get_profile_api.dart';
import 'package:puthagam/data/api/profile/get_users_purchase_list_api.dart';
import 'package:puthagam/data/handler/api_handler.dart';
import 'package:puthagam/data/handler/api_url.dart';
import 'package:puthagam/model/token_model.dart';
import 'package:puthagam/screen/dashboard/home/home_controller.dart';
import 'package:puthagam/utils/app_routes.dart';
import 'package:puthagam/utils/app_snackbar.dart';
import 'package:puthagam/utils/app_utils.dart';
import 'package:puthagam/utils/local_storage/local_storage.dart';
import 'package:puthagam/utils/network_info.dart';
import 'package:http/http.dart'as http;
final HomeController con = Get.put(HomeController());
class SplashController extends GetxController {
  @override
  Future<void> onInit() async {
    super.onInit();
    gettokenapi();
     await getUserProfileApi();
    log("token ${LocalStorage.token}");
    Timer(const Duration(seconds: 4), () {
      if (LocalStorage.userId.toString() != "null" &&
          LocalStorage.userId.toString() != "") {
        getPurchasesListApi();
        getUserProfileApi();
        HomeController hCon = Get.put(HomeController());
        hCon.callAllApis();
        Get.offAllNamed(AppRoutes.bottomBarScreen);
      } else {
        Get.offAllNamed(AppRoutes.introScreen);
      }
    });
    

    
  }
  gettokenapi(

  ) async {
  // HomeController con = Get.put(HomeController());
  //  BookDetailController con1 = Get.put(BookDetailController());

  try {
    bool connection =
        await NetworkInfo(connectivity: Connectivity()).isConnected();
    if (connection) {
       print("gettokenapimmmmm");

        var token = await getToken();
     // con.isConnected.value = true;
      await LocalStorage.getData();
      if (LocalStorage.token.toString() != "null" &&
          LocalStorage.token.toString().isNotEmpty &&
          LocalStorage.userId.toString() != "null" &&
          LocalStorage.userId.toString().isNotEmpty) {
             print("gefirstttttt${LocalStorage.userId.toString()}");

      //  con.continueLoading.value = true;

      //  con.continueBookList.clear();
  
        http.Response response = await ApiHandler.post(
            url: "${ApiUrls.baseUrl}User/UpdateDeviceToken",
            
            body: {
           
         
  "userId":LocalStorage.userId,
  //LocalStorage.userId.toString(),
  "deviceToken":  token,
  // token,
}
             
            );
 print("idloginnnn${LocalStorage.userId}");
 print("deviceToken${ token}");

        var decoded = jsonDecode(response.body);
        print("gettokenapi");

        if (response.statusCode == 200 ||
            response.statusCode == 201 ||
            response.statusCode == 202 ||
            response.statusCode == 203 ||
            response.statusCode == 204) {
          var decoded = AutogeneratedModelFromJson(response.body);
           print("gettokenapiresponse${response.body}");

          // for (var element in decoded.) {
          //   //con.continueBookList.add(element);
          // }

        //  con.continueLoading.value = false;
        } else if (response.statusCode == 401) {
          LocalStorage.clearData();
        

        //  Get.offAllNamed(AppRoutes.loginScreen);
          toast(decoded['status']['message'], false);
        } else {
      

          toast(decoded['status']['message'], false);
        }
      }
    } else {
    
      toast("No Internet Connection!", false);
    }
  } catch (e) {
   print("nocalll");
  }}
}
